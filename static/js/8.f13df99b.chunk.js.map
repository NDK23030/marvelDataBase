{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharacterByName","_ref3","_callee3","name","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComic","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","comic","_comic$textObjects$","title","pagCount","pageCount","language","textObjects","price","prices","AppBanner","_jsxs","className","children","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","initMount","useRef","useEffect","current","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","arr","item","CSSTransition","timeout","classNames","Link","to","TransitionGroup","component","renderItems","errorMessage","spinner","Spinner","disabled","onClick","ComicsPage","_Fragment","Helmet","content"],"mappings":"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","file":"static/js/8.f13df99b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img \r\n            style={{display: 'block', width: \"250px\", height: \"250px\", objectFit: 'contain', margin: \"0 auto\"}} \r\n            src={img} \r\n            alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=ced3e950ab7b0771ee39544916a43456';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    };\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n    const getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComic);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComic(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComic = (comic) => {\r\n        return {\r\n            id: comic.id,\r\n            title: comic.title,\r\n            description: comic.description || \"There is no description\",\r\n            pagCount: comic.pageCount ? `${comic.pageCount} p.` : \"No information about the number of pages\",\r\n            thumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\r\n            language: comic.textObjects[0]?.language || \"en-rus\",\r\n            price: comic.prices[0].price ? `${comic.prices[0].price}` : \"not avaliable\"\r\n        };\r\n    }\r\n\r\n    return {\r\n        loading, \r\n        error, \r\n        clearError, \r\n        getAllCharacters, \r\n        getCharacter,\r\n        getCharacterByName,\r\n        getAllComics,\r\n        getComic\r\n    };\r\n}\r\n\r\nexport default useMarvelService;"," import {useState, useCallback} from \"react\"\r\n\r\n export const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if(!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n        \r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError};\r\n }","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect, useRef } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { Link } from 'react-router-dom';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    const initMount = useRef(true);\n\n    useEffect(() => {\n        if (initMount.current) {\n            initMount.current = false;\n      \n            return;\n          }\n      \n          return onRequest(offset, true);\n          // eslint-disable-next-line\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = async(newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8 || newComicsList.offset === 1559) {\n            ended = true;\n        }\n\n        setComicsList((comicsList) =>[...comicsList, ...newComicsList]);\n        setNewItemLoading(false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended)\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item) => {\n            return (\n                <CSSTransition\n                    key={item.id}\n                    timeout={500}\n                    classNames=\"comics__item\">\n                    <li className=\"comics__item\">\n                        <Link to={`/comics/${item.id}`}>\n                            <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                            <div className=\"comics__item-name\">{item.title}</div>\n                            <div className='comics__item-price'>{item.price}</div>\n                        </Link>\n                </li>\n                </CSSTransition>\n            )\n        });\n\n        return (\n            <ul className=\"comics__grid\">\n                <TransitionGroup component={null}>\n                    {items}\n                </TransitionGroup>\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\n\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta \r\n                    name=\"description\"\r\n                    content=\"Page with list of our comics\"/>\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}